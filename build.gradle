// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'org.jboss.netty:netty:3.2.10.Final'
    compile 'org.hornetq:hornetq-jms-client:2.4.7.Final'
    compile 'com.rabbitmq:amqp-client:3.6.1'
    compile 'org.apache.activemq:activemq-core:5.7.0'
    compile 'org.apache.kafka:kafka_2.10:0.9.0.1'
    compile 'de.bwaldvogel:mongo-java-server:1.6.0'
    compile 'org.mongodb:mongo-java-driver:3.2.2'
    compile 'org.apache.commons:commons-lang3:3.4'
    testCompile 'junit:junit:4.12'
}

jar {
    manifest {
        attributes('Main-Class': 'demo.benchmark.MessagingProvidersBenchmarkMain')
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task execute(type: JavaExec) {
    main = "demo.benchmark.MessagingProvidersBenchmarkMain"
    classpath = sourceSets.main.runtimeClasspath
    Properties properties = new Properties()
    properties.load(new FileInputStream("$project.rootDir/application.properties"))
    properties.forEach { key, value ->
        systemProperty key, value
    }
    // Overrider application.properties using gradle execute -PjvmArgs="-Dproperty=value"
    if (project.hasProperty('jvmArgs')) {
        jvmArgs project.jvmArgs.split('\\s+')
    }
}
